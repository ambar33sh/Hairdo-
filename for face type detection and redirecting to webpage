import cv2
import numpy as np
from keras.models import model_from_json
import webbrowser

emotion_dict = {0: "heart", 1: "oval", 2: "round", 3: "square"}

json_file = open(r'C:\Users\Singh\PycharmProjects\pythonProject\face_6_1APR.json')
loaded_model_json = json_file.read()
json_file.close()
emotion_model = model_from_json(loaded_model_json)
emotion_model.load_weights(r"C:\Users\Singh\PycharmProjects\pythonProject\Face6_1APR.weights.h5")
print("Loaded model from disk")

cap = cv2.VideoCapture(0)

face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

while True:

    ret, frame = cap.read()

    if not ret:
        break

    gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    faces = face_cascade.detectMultiScale(gray_frame, scaleFactor=1.3, minNeighbors=5)

    for (x, y, w, h) in faces:

        cv2.rectangle(frame, (x, y), (x + w, y + h), (255, 0, 0), 2)

        roi_gray = gray_frame[y:y + h, x:x + w]
        roi_gray_resized = cv2.resize(roi_gray, (48, 48))
        roi_gray_resized = np.expand_dims(np.expand_dims(roi_gray_resized, -1), 0)

        emotion_prediction = emotion_model.predict(roi_gray_resized)
        maxindex = int(np.argmax(emotion_prediction))
        detected_face_type = emotion_dict[maxindex]

        # Display GUI to get user input for hair style
        cv2.putText(frame, f"Detected face type: {detected_face_type}", (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 0, 0), 2, cv2.LINE_AA)
        cv2.putText(frame, "Choose hair style (l: long, s: short):", (50, 100), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 0, 0), 2, cv2.LINE_AA)
        cv2.imshow('face type', frame)

        # Wait for user input
        key = cv2.waitKey(0) & 0xFF

        # Check user input and redirect accordingly
        if key == ord('l'):  # User chose long hair style
            search_query = f"{detected_face_type} long hair style"
            webbrowser.open(f'https://www.google.com/search?q={search_query}')
        elif key == ord('s'):  # User chose short hair style
            search_query = f"{detected_face_type} short hair style"
            webbrowser.open(f'https://www.google.com/search?q={search_query}')

    if key == ord('q'):  # Quit if 'q' is pressed
        break

cap.release()
cv2.destroyAllWindows()
